# This is a basic workflow to help you get started with Actions

name: deploy-full-blue-green
# https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#workflow_run
# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
    paths:
      - apps/js-calc-backend/**
      - apps/js-calc-frontend/**
      - scripts/**

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

defaults:
  run:
    working-directory: apps

env:
  BACKEND_APP_NAME: js-calc-backend
  FRONTEND_APP_NAME: js-calc-frontend

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   name: build
  #   permissions:
  #     packages: write
  #     contents: read
  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Build image
  #     run: |
  #       cd $BACKEND_APP_NAME
  #       docker build . --file Dockerfile --tag $BACKEND_APP_NAME --label "runnumber=${GITHUB_RUN_ID}"
  #       cd ../$FRONTEND_APP_NAME
  #       docker build . --file Dockerfile --tag $FRONTEND_APP_NAME --label "runnumber=${GITHUB_RUN_ID}"

  #   - name: Log in to registry
  #     run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

  #   - name: Push image
  #     run: |
  #       BACKEND_IMAGE_ID=ghcr.io/${{ github.repository_owner }}/container-apps/$BACKEND_APP_NAME
  #       docker tag $BACKEND_APP_NAME $BACKEND_IMAGE_ID:${GITHUB_RUN_ID}
  #       docker push $BACKEND_IMAGE_ID:${GITHUB_RUN_ID}

  #       FRONTEND_IMAGE_ID=ghcr.io/${{ github.repository_owner }}/container-apps/$FRONTEND_APP_NAME
  #       docker tag $FRONTEND_APP_NAME $FRONTEND_IMAGE_ID:${GITHUB_RUN_ID}
  #       docker push $FRONTEND_IMAGE_ID:${GITHUB_RUN_ID}

  deploy:
    runs-on: ubuntu-latest
    name: deploy
    # needs: [build]
    steps:
    - uses: actions/checkout@v2
    - name: Install CLI-beta
      run: |
        cd ../..
        CWD="$(pwd)"
        python3 -m venv oidc-venv
        . oidc-venv/bin/activate
        echo "activated environment" 
        python3 -m pip install --upgrade pip
        echo "started installing cli beta" 
        pip install -q --extra-index-url https://azcliprod.blob.core.windows.net/beta/simple/ azure-cli
        echo "installed cli beta"    
        echo "$CWD/oidc-venv/bin" >> $GITHUB_PATH

    # Login to Azure 
    - name: Azure Login Xpirit
      uses: azure/login@v1.4.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: 'Run scripts'
      run: |
        ls -l 
        cd $GITHUB_WORKSPACE/scripts
        ls -l 
        chmod +x ./deploy.sh
        ./deploy.sh ${{ secrets.RESOURCE_GROUP }} ${GITHUB_RUN_ID} "ghcr.io/${{ github.repository_owner }}/container-apps/"
      shell: bash